{
  "#include": {
    "prefix": "#inc",
    "body": ["#include "],
    "description": "snippet for #include"
  },

  "using": {
    "prefix": "usi",
    "body": ["using $0"],
    "description": "snippet for using"
  },

  "using namespace": {
    "prefix": "usn",
    "body": ["using namespace $0"],
    "description": "snippet for using namespace"
  },

  "for 循环": {
    "prefix": "for",
    "body": ["for (int ${1} = ${2:0}; ${1} < ${3:length}; ${1}++) {", "\t$0", "}"],
    "description": "snippet for a for loop"
  },

  "foreach 循环": {
    "prefix": "fore",
    "body": ["for (auto &$1 : $2) {", "\t$0", "}"],
    "description": "snippet for a for-auto loop"
  },

  "do...while 循环": {
    "prefix": "do",
    "body": ["do {", "\t$0", "} while($1);"],
    "description": "snippet for a do...while loop"
  },

  "while 循环": {
    "prefix": "whi",
    "body": ["while ($1) {", "\t$0", "}"],
    "description": "snippet for a while loop"
  },

  "if 语句": {
    "prefix": "if",
    "body": ["if ($1) {", "\t$0", "}"],
    "description": "snippet for an if statement"
  },

  "else": {
    "prefix": "els",
    "body": ["else {", "\t$0", "}"],
    "description": "snippet for else"
  },

  "else if": {
    "prefix": "elif",
    "body": ["else if ($1) {", "\t$0", "}"],
    "description": "snippet for else-if"
  },

  "enum 声明": {
    "prefix": "enu",
    "body": ["enum $1 {", "\t$0", "};"],
    "description": "snippet for an enum declaration"
  },

  "class 声明": {
    "prefix": "cla",
    "body": ["class ${1:/* example */} {",
      "\tpublic:",
      "\t\t$1(${2:/* args */});",
      "",
      "\tprivate:",
      "\t\t$0",
      "};"
    ],
    "description": "snippet for a class declaration"
  },

  "class 继承": {
    "prefix": "cli",
    "body": ["class $1 : public $0 {", "", "};"],
    "description": "snippet for a class-inherit declaration"
  },

  "namespace": {
    "prefix": "nam",
    "body": ["namespace $1 {", "\t$0", "} // $1"]
  },

  "#ifndef": {
    "prefix": "#ifn",
    "body": [
      "#ifndef __${TM_FILENAME_BASE/(.*)/${1:/upcase}/}__H__",
      "#define __${TM_FILENAME_BASE/(.*)/${1:/upcase}/}__H__",
      "$0",
      "#endif  // !__${TM_FILENAME_BASE/(.*)/${1:/upcase}/}__H__"
    ],
    "description": "snippet for #ifndef"
  },

  "#ifdef": {
    "prefix": "#ifd",
    "body": ["#ifdef  ${1}", "$0", "#endif  //$1"],
    "description": "snippet for #if"
  },

  "struct 声明": {
    "prefix": "stru",
    "body": ["struct $1 {", "\t$0", "};"],
    "description": "snippet for a struct declaration"
  },

  "switch 语句": {
    "prefix": "swi",
    "body": [
      "switch ($1) {",
      "\tcase $2:",
      "\t\t$0",
      "\t\tbreak;",
      "",
      "\tdefault:",
      "\t\t",
      "\t\tbreak;",
      "}"
    ],
    "description": "snippet for a switch statement"
  },

  "case": {
    "prefix": "cas",
    "body": ["case $1:", "\t$0", "\tbreak;"],
    "description": "snippet for case (...)"
  },

  "try 代码块": {
    "prefix": "try",
    "body": ["try {", "\t$1", "} catch ($2) {", "\t$0", "}"],
    "description": "snippet for a try-catch block"
  },

  "union 声明": {
    "prefix": "uni",
    "body": ["union $1 {", "\t$0", "};"],
    "description": "snippet for a union declaration"
  },

  "#define": {
    "prefix": "#def",
    "body": ["#define  $1  $2"],
    "description": "snippet for #def"
  },

  "main 函数声明": {
    "prefix": "mai",
    "body": [
      "int main(int argc, char const *argv[]) {",
      "\t$0",
      "",
      "\treturn 0;",
      "}"
    ],
    "description": "snippet for a main function declaration"
  },

  "文件头": {
    "prefix": "fh",
    "body": [
      "/**",
      "**********************************************************************************************************************************************************************************************************************************",
      "* @file:\t$TM_FILENAME",
      "* @author:\t$1",
      "* @date:\t$CURRENT_YEAR年$CURRENT_MONTH月$CURRENT_DATE日 $CURRENT_HOUR:$CURRENT_MINUTE:$CURRENT_SECOND $CURRENT_DAY_NAME",
      "* @brief:\t$2",
      "**********************************************************************************************************************************************************************************************************************************",
      "**/"
    ],
    "description": "snippet for a file header"
  },

  "template": {
    "prefix": "tem",
    "body": ["template <typename $0>"],
    "description": "snippet for a template"
  }
}
